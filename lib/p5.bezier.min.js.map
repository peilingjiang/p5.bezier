{"version":3,"file":"p5.bezier.min.js","mappings":"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","sources":["webpack://p5bezier/webpack/universalModuleDefinition","webpack://p5bezier/webpack/bootstrap","webpack://p5bezier/webpack/runtime/define property getters","webpack://p5bezier/webpack/runtime/hasOwnProperty shorthand","webpack://p5bezier/webpack/runtime/make namespace object","webpack://p5bezier/./src/p5.bezier.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"p5bezier\"] = factory();\n\telse\n\t\troot[\"p5bezier\"] = factory();\n})(this, () => {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/*\np5.bezier library by Peiling Jiang\n2020\n\nupdated Dec 2023\n*/\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nwindow.console.log('[p5.bezier]');\n// accuracy 0 - 10, default 7\nvar _p5bezierAccuracyListAll = {\n    0: 0.2,\n    1: 0.1,\n    2: 0.05,\n    3: 0.04,\n    4: 0.02,\n    5: 0.01,\n    6: 0.008,\n    7: 0.002,\n    8: 0.001,\n    9: 0.0005,\n    10: 0.0001,\n};\nvar _canvas, _ctx, _dimension, _useP5, _beginPath, _moveTo, _lineTo, _closePath;\nvar ENSURED_FACTORIAL_COUNT = 10;\nvar _calculatedFactorials = [1];\nvar _calculatedBinomialCoefficients = {};\n/* -------------------------------------------------------------------------- */\n/* -------------------------------------------------------------------------- */\n/* -------------------------------------------------------------------------- */\n// helpers\nfunction _determineDimension(context, isP3D) {\n    return context.constructor.name === 'WebGLRenderingContext' || isP3D ? 3 : 2;\n}\nfunction _setCanvasFunctions(useP5, canvas, context) {\n    if (useP5) {\n        _beginPath = canvas.beginShape;\n        _moveTo = canvas.vertex;\n        _lineTo = canvas.vertex;\n        _closePath = canvas.endShape;\n    }\n    else {\n        _beginPath = context.beginPath.bind(context);\n        _moveTo = context.moveTo.bind(context);\n        _lineTo = context.lineTo.bind(context);\n        _closePath = context.closePath.bind(context);\n    }\n}\nfunction _ensureFactorials(n) {\n    for (var i = _calculatedFactorials.length; i <= n; i++)\n        _calculatedFactorials[i] = i * _calculatedFactorials[i - 1];\n}\n_ensureFactorials(ENSURED_FACTORIAL_COUNT);\nfunction _helper_factorial(i) {\n    return _calculatedFactorials[i];\n}\nfunction _helper_binomialCoefficient(n, i) {\n    return (_helper_factorial(n) / (_helper_factorial(i) * _helper_factorial(n - i)));\n}\nfunction _binomialCoefficient(n, i) {\n    if (i === 0 || i === n)\n        return 1;\n    // _ensureFactorials(n)\n    if (!_calculatedBinomialCoefficients[n])\n        _calculatedBinomialCoefficients[n] = {};\n    if (_calculatedBinomialCoefficients[n][i] !== undefined)\n        return _calculatedBinomialCoefficients[n][i];\n    _calculatedBinomialCoefficients[n][i] = _helper_binomialCoefficient(n, i);\n    return _calculatedBinomialCoefficients[n][i];\n}\nfunction _helper_dist() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    if (args.length === 4)\n        return Math.hypot(args[0] - args[2], args[1] - args[3]);\n    else if (args.length === 6)\n        return Math.hypot(args[0] - args[3], args[1] - args[4], args[2] - args[5]);\n    return 0;\n}\nfunction _helper_style() {\n    if (_canvas._doFill)\n        _ctx.fill();\n    if (_canvas._doStroke)\n        _ctx.stroke();\n}\nfunction _deepCopyPoints(arr) {\n    return arr.map(function (v) { return Array.from(v); });\n}\nfunction _findCloseCurveExtraPoints(pointList) {\n    var first = pointList[0];\n    var last = pointList[pointList.length - 1];\n    var second = pointList[1];\n    var secondLast = pointList[pointList.length - 2];\n    var point1 = [\n        2 * last[0] - secondLast[0],\n        2 * last[1] - secondLast[1],\n    ];\n    var point2 = [2 * first[0] - second[0], 2 * first[1] - second[1]];\n    return [point1, point2, first];\n}\nfunction _interpolateVertex(v1, v2, t) {\n    if (v1.length === 2 && v2.length === 2)\n        return [v1[0] + (v2[0] - v1[0]) * t, v1[1] + (v2[1] - v1[1]) * t];\n    if (v1.length === 3 && v2.length === 3)\n        return [\n            v1[0] + (v2[0] - v1[0]) * t,\n            v1[1] + (v2[1] - v1[1]) * t,\n            v1[2] + (v2[2] - v1[2]) * t,\n        ];\n    return v2;\n}\n/* -------------------------------------------------------------------------- */\n/* -------------------------------------------------------------------------- */\n/* -------------------------------------------------------------------------- */\nfunction initBezier(canvas) {\n    _canvas = canvas;\n    _ctx = _canvas.drawingContext;\n    if (typeof p5 !== 'undefined' && canvas instanceof p5.Graphics) {\n        _useP5 = true;\n        _dimension = _determineDimension(_ctx, false);\n    }\n    else if ((typeof p5 !== 'undefined' && canvas instanceof p5.Renderer) ||\n        canvas.drawingContext) {\n        _useP5 = false;\n        if (typeof p5 === 'undefined' ||\n            (typeof p5 !== 'undefined' && !(canvas instanceof p5.Renderer)))\n            window.console.warn('[p5.bezier] Support beyond p5.js is not tested.');\n        _dimension = _determineDimension(_ctx, canvas.isP3D);\n    }\n    else\n        throw new Error('[p5.bezier] Canvas is not supported.');\n    _setCanvasFunctions(_useP5, _canvas, _ctx);\n}\nfunction newBezier(pointList, closeType, accuracy) {\n    if (closeType === void 0) { closeType = 'OPEN'; }\n    if (accuracy === void 0) { accuracy = 7; }\n    pointList = _deepCopyPoints(pointList);\n    if (closeType === 'CLOSE') {\n        var closeCurveExtraPoints = _findCloseCurveExtraPoints(pointList);\n        pointList.push.apply(pointList, closeCurveExtraPoints);\n    }\n    var tIncrement = _p5bezierAccuracyListAll[accuracy];\n    var p = pointList.length; // pointList has p points for (p - 1) degree curves\n    var n = p - 1;\n    _ensureFactorials(n);\n    _beginPath();\n    _moveTo.apply(void 0, pointList[0]);\n    if (_dimension === 2) {\n        var x = void 0, y = void 0, t = void 0;\n        for (t = 0; t <= 1; t += tIncrement) {\n            x = y = 0;\n            for (var i = 0; i <= n; i++) {\n                var coefficient = _binomialCoefficient(n, i) * Math.pow(1 - t, n - i) * Math.pow(t, i);\n                x += coefficient * pointList[i][0];\n                y += coefficient * pointList[i][1];\n            }\n            _lineTo(x, y);\n        }\n    }\n    else if (_dimension === 3) {\n        var t = void 0;\n        for (t = 0; t <= 1; t += tIncrement) {\n            var xyz = [0, 0, 0];\n            for (var i = 0; i <= n; i++) {\n                var coefficient = _binomialCoefficient(n, i) * Math.pow(1 - t, n - i) * Math.pow(t, i);\n                for (var d = 0; d < 3; d++)\n                    xyz[d] += coefficient * pointList[i][d];\n            }\n            _lineTo.apply(void 0, xyz);\n        }\n    }\n    _lineTo.apply(void 0, pointList.slice(-1)[0]);\n    if (_useP5)\n        _closePath(closeType);\n    else if (closeType === 'CLOSE')\n        _closePath();\n    _helper_style();\n}\nfunction newBezierObj(pointList, closeType, accuracy) {\n    if (closeType === void 0) { closeType = 'OPEN'; }\n    if (accuracy === void 0) { accuracy = 7; }\n    var increment = _p5bezierAccuracyListAll[accuracy];\n    return new BezierCurve(pointList, closeType, increment, _dimension);\n}\nvar BezierCurve = /** @class */ (function () {\n    // take pointList, closeType, tIncrement, bezierDimension into constructor\n    function BezierCurve(points, closeType, increment, dimension, vertexList) {\n        var _a;\n        if (vertexList === void 0) { vertexList = null; }\n        this.controlPoints = _deepCopyPoints(points);\n        if (closeType === 'CLOSE') {\n            (_a = this.controlPoints).push.apply(_a, _findCloseCurveExtraPoints(this.controlPoints));\n            this.closeType = 'CLOSE';\n        }\n        else\n            this.closeType = 'OPEN';\n        this.dimension = dimension;\n        this.increment = increment;\n        this.vertexList = [];\n        this.p = this.controlPoints.length; // has p points for (p - 1) degree curves\n        this.n = this.p - 1; // degree\n        // ensure enough factorials are calculated up to this.n\n        _ensureFactorials(this.n);\n        if (vertexList === null)\n            this._buildVertexList();\n        else\n            this.vertexList = __spreadArray([], vertexList, true);\n    }\n    BezierCurve.prototype._buildVertexList = function () {\n        this.vertexList = [];\n        if (this.dimension === 2) {\n            for (var t = 0; t <= 1; t += this.increment) {\n                var x = 0;\n                var y = 0;\n                for (var i = 0; i <= this.n; i++) {\n                    var binomialCoefficient = _binomialCoefficient(this.n, i);\n                    var term = binomialCoefficient * Math.pow(1 - t, this.n - i) * Math.pow(t, i);\n                    x += term * this.controlPoints[i][0];\n                    y += term * this.controlPoints[i][1];\n                }\n                this.vertexList.push([x, y]);\n            }\n        }\n        else if (this.dimension === 3) {\n            for (var t = 0; t <= 1; t += this.increment) {\n                var xyz = [0, 0, 0];\n                for (var i = 0; i <= this.n; i++) {\n                    var binomialCoefficient = _binomialCoefficient(this.n, i);\n                    var term = binomialCoefficient * Math.pow(1 - t, this.n - i) * Math.pow(t, i);\n                    for (var d = 0; d < 3; d++) {\n                        xyz[d] += term * this.controlPoints[i][d];\n                    }\n                }\n                this.vertexList.push(xyz);\n            }\n        }\n        this._addVertex(this.controlPoints[this.controlPoints.length - 1]);\n        this.dimension = this.vertexList[0].length; // update dimension\n        return this.vertexList;\n    };\n    BezierCurve.prototype._addVertex = function (vArray) {\n        // vArray is an array of [x, y] or [x, y, z]\n        _lineTo.apply(void 0, vArray);\n    };\n    BezierCurve.prototype._distVertex = function (vArray1, vArray2) {\n        if (this.dimension === 3 && vArray1.length === 3 && vArray2.length === 3) {\n            return _helper_dist(vArray1[0], vArray1[1], vArray1[2], vArray2[0], vArray2[1], vArray2[2]);\n        }\n        else if (this.dimension === 2) {\n            return _helper_dist(vArray1[0], vArray1[1], vArray2[0], vArray2[1]);\n        }\n        return 0;\n    };\n    BezierCurve.prototype.draw = function (dash) {\n        var _this = this;\n        if (!dash) {\n            _beginPath();\n            this.vertexList.map(function (v) { return _this._addVertex(v); });\n            if (this.closeType === 'CLOSE')\n                _ctx.closePath();\n            if (_useP5)\n                _closePath(this.closeType);\n            else if (this.closeType === 'CLOSE')\n                _closePath();\n            _helper_style();\n        }\n        else {\n            if (this.increment > 0.008) {\n                this.increment = 0.008;\n                console.warn('[p5.bezier] Accuracy is changed to 6 for a dash curve.');\n            }\n            // draw a dash curve\n            var solidPart = Math.abs(dash[0]), gapPart = Math.abs(dash[1]), solid = true;\n            var lastVertex = this.vertexList[0];\n            var toUseVertexInd = 1, toUseVertex = this.vertexList[toUseVertexInd];\n            var currentVirtualVertex = lastVertex;\n            var availableDist = 0, neededDist = solid ? solidPart : gapPart;\n            _ctx.save(); // push\n            _ctx.fillStyle = 'rgba(0, 0, 0, 0)'; // TODO\n            _beginPath();\n            _moveTo.apply(void 0, lastVertex);\n            while (toUseVertexInd < this.vertexList.length) {\n                toUseVertex = this.vertexList[toUseVertexInd];\n                var newDist = this._distVertex(lastVertex, toUseVertex);\n                availableDist = newDist;\n                while (availableDist >= neededDist) {\n                    currentVirtualVertex = _interpolateVertex(currentVirtualVertex, toUseVertex, neededDist / availableDist);\n                    if (solid)\n                        _lineTo.apply(void 0, currentVirtualVertex);\n                    else\n                        _moveTo.apply(void 0, currentVirtualVertex);\n                    availableDist -= neededDist;\n                    solid = !solid;\n                    neededDist = solid ? solidPart : gapPart;\n                }\n                // available dist is not enough, used as much as possible\n                if (solid)\n                    _lineTo.apply(void 0, toUseVertex);\n                else\n                    _moveTo.apply(void 0, toUseVertex);\n                var usedDist = this._distVertex(currentVirtualVertex, toUseVertex);\n                neededDist -= usedDist;\n                lastVertex = toUseVertex;\n                currentVirtualVertex = lastVertex;\n                toUseVertexInd++;\n            }\n            _helper_style();\n            _ctx.restore();\n        }\n    };\n    BezierCurve.prototype.update = function (newControlPointList) {\n        if (newControlPointList.length !== this.controlPoints.length) {\n            throw new Error('[p5.bezier] The number of control points changed.');\n        }\n        else if (this.controlPoints.every(function (v, i) { return v === newControlPointList[i]; })) {\n            return;\n        }\n        else {\n            this.controlPoints = newControlPointList;\n            this._buildVertexList();\n        }\n    };\n    BezierCurve.prototype.move = function (x, y, z, toDraw, dash) {\n        if (z === void 0) { z = null; }\n        if (toDraw === void 0) { toDraw = true; }\n        if (z === null && this.dimension === 3) {\n            throw new Error('[p5.bezier] X, Y, and Z are needed to move a 3D curve.');\n        }\n        else {\n            var toMove_1 = [x, y];\n            if (z !== null)\n                toMove_1.push(z);\n            var newCurveV = this.vertexList.map(function (v) { return v.slice(); });\n            var newCurveObj = new BezierCurve(this.controlPoints, this.closeType, this.increment, this.dimension, newCurveV);\n            newCurveObj.vertexList = newCurveObj.vertexList.map(function (v) { return v.map(function (val, i) { return val + toMove_1[i]; }); });\n            if (toDraw)\n                newCurveObj.draw(dash);\n            return newCurveObj;\n        }\n    };\n    BezierCurve.prototype.shortest = function (pX, pY, pZ) {\n        var _this = this;\n        if (pZ === void 0) { pZ = 0; }\n        var minVertex = [0, 0, 0];\n        var dMin = Infinity;\n        this.vertexList.map(function (v) {\n            var nowMin = _this._distVertex(v, [pX, pY, pZ]);\n            if (dMin > nowMin) {\n                dMin = nowMin;\n                minVertex = __spreadArray([], v, true);\n            }\n        });\n        return minVertex;\n    };\n    return BezierCurve;\n}());\nexport { initBezier, newBezier, newBezierObj };\n"],"names":["root","factory","exports","module","define","amd","this","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","__spreadArray","to","from","pack","arguments","length","ar","i","l","Array","slice","concat","window","console","log","_canvas","_ctx","_dimension","_useP5","_beginPath","_moveTo","_lineTo","_closePath","_p5bezierAccuracyListAll","_calculatedFactorials","_calculatedBinomialCoefficients","_determineDimension","context","isP3D","constructor","name","_ensureFactorials","n","_helper_factorial","_binomialCoefficient","undefined","_helper_binomialCoefficient","_helper_dist","args","_i","Math","hypot","_helper_style","_doFill","fill","_doStroke","stroke","_deepCopyPoints","arr","map","v","_findCloseCurveExtraPoints","pointList","first","last","second","secondLast","initBezier","canvas","drawingContext","p5","Graphics","Renderer","Error","warn","useP5","beginShape","vertex","endShape","beginPath","bind","moveTo","lineTo","closePath","_setCanvasFunctions","newBezier","closeType","accuracy","closeCurveExtraPoints","push","apply","tIncrement","x","y","t","coefficient","pow","xyz","d","newBezierObj","increment","BezierCurve","points","dimension","vertexList","_a","controlPoints","p","_buildVertexList","term","_addVertex","vArray","_distVertex","vArray1","vArray2","draw","dash","v1","v2","_this","solidPart","abs","gapPart","solid","lastVertex","toUseVertexInd","toUseVertex","currentVirtualVertex","availableDist","neededDist","save","fillStyle","restore","update","newControlPointList","every","move","z","toDraw","toMove_1","newCurveV","newCurveObj","val","shortest","pX","pY","pZ","minVertex","dMin","Infinity","nowMin"],"sourceRoot":""}