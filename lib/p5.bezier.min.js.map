{"version":3,"file":"p5.bezier.min.js","mappings":"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","sources":["webpack://p5bezier/webpack/universalModuleDefinition","webpack://p5bezier/webpack/bootstrap","webpack://p5bezier/webpack/runtime/define property getters","webpack://p5bezier/webpack/runtime/hasOwnProperty shorthand","webpack://p5bezier/webpack/runtime/make namespace object","webpack://p5bezier/./src/p5.bezier.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"p5bezier\"] = factory();\n\telse\n\t\troot[\"p5bezier\"] = factory();\n})(this, () => {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/*\np5.bezier library by Peiling Jiang\n2020\n\nupdated May 2023\n*/\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nwindow.console.log('[p5.bezier]');\n// fidelity 0-10\nvar p5bezierAccuracyListAll = [\n    0.2, 0.1, 0.05, 0.04, 0.02, 0.01, 0.008, 0.002, 0.001, 0.0005, 0.0001,\n];\nvar _canvas, _ctx, _dimension, _strict, _useP5, _beginPath, _moveTo, _lineTo, _closePath;\nvar _precalculatedFactorials = [1];\n/* -------------------------------------------------------------------------- */\n/* -------------------------------------------------------------------------- */\n/* -------------------------------------------------------------------------- */\n// helpers\nfunction _determineDimension(context, isP3D) {\n    return context.constructor.name === 'WebGLRenderingContext' || isP3D ? 3 : 2;\n}\nfunction _setCanvasFunctions(useP5, canvas, context) {\n    if (useP5) {\n        _beginPath = canvas.beginShape;\n        _moveTo = canvas.vertex;\n        _lineTo = canvas.vertex;\n        _closePath = canvas.endShape;\n    }\n    else {\n        _beginPath = context.beginPath.bind(context);\n        _moveTo = context.moveTo.bind(context);\n        _lineTo = context.lineTo.bind(context);\n        _closePath = context.closePath.bind(context);\n    }\n}\nfunction _ensureFactorials(n) {\n    for (var i = _precalculatedFactorials.length; i <= n; i++) {\n        _precalculatedFactorials[i] = i * _precalculatedFactorials[i - 1];\n    }\n}\nfunction _helper_factorial(i) {\n    _ensureFactorials(i);\n    return _precalculatedFactorials[i];\n}\nfunction _binomialCoefficient(n, i) {\n    _ensureFactorials(n);\n    return (_helper_factorial(n) / (_helper_factorial(i) * _helper_factorial(n - i)));\n}\nfunction _helper_dist() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    if (args.length === 4)\n        return Math.hypot(args[0] - args[2], args[1] - args[3]);\n    else if (args.length === 6)\n        return Math.hypot(args[0] - args[3], args[1] - args[4], args[2] - args[5]);\n    return 0;\n}\nfunction _helper_style() {\n    if (_canvas._doFill)\n        _ctx.fill();\n    if (_canvas._doStroke)\n        _ctx.stroke();\n}\nfunction _deepCopyArray(arr) {\n    return arr.map(function (v) { return __spreadArray([], v, true); });\n}\nfunction _findCloseCurveExtraPoints(pointList) {\n    var first = pointList[0];\n    var last = pointList[pointList.length - 1];\n    var second = pointList[1];\n    var secondLast = pointList[pointList.length - 2];\n    var point1 = [2 * last[0] - secondLast[0], 2 * last[1] - secondLast[1]];\n    var point2 = [2 * first[0] - second[0], 2 * first[1] - second[1]];\n    return [point1, point2, first];\n}\n/* -------------------------------------------------------------------------- */\n/* -------------------------------------------------------------------------- */\n/* -------------------------------------------------------------------------- */\nexport function initBezier(canvas, strictMode) {\n    if (strictMode === void 0) { strictMode = false; }\n    _canvas = canvas;\n    _ctx = _canvas.drawingContext;\n    if (typeof p5 !== 'undefined' && canvas instanceof p5.Graphics) {\n        _useP5 = true;\n        _dimension = _determineDimension(_ctx, false);\n    }\n    else if ((typeof p5 !== 'undefined' && canvas instanceof p5.Renderer) ||\n        canvas.drawingContext) {\n        _useP5 = false;\n        if (typeof p5 === 'undefined' ||\n            (typeof p5 !== 'undefined' && !(canvas instanceof p5.Renderer))) {\n            window.console.warn('[p5.bezier] Support for non-p5 canvas is not tested.');\n        }\n        _dimension = _determineDimension(_ctx, canvas.isP3D);\n    }\n    else {\n        throw new Error('[p5.bezier] Canvas is not supported.');\n    }\n    _setCanvasFunctions(_useP5, _canvas, _ctx);\n    _strict = strictMode;\n}\nexport function newBezier(pointList, closeType, accuracy) {\n    if (closeType === void 0) { closeType = 'OPEN'; }\n    if (accuracy === void 0) { accuracy = 7; }\n    if (_strict && !Array.isArray(pointList)) {\n        throw new Error(\"[p5.bezier] newBezier() function expects an array, got \".concat(typeof pointList, \".\"));\n    }\n    pointList = _deepCopyArray(pointList);\n    if (closeType === 'CLOSE') {\n        var closeCurveExtraPoints = _findCloseCurveExtraPoints(pointList);\n        pointList.push.apply(pointList, closeCurveExtraPoints);\n    }\n    var tIncrement = p5bezierAccuracyListAll[accuracy];\n    var p = pointList.length; // pointList has p points for (p - 1) degree curves\n    var n = p - 1;\n    if (_dimension !== 0) {\n        if (_strict) {\n            for (var _i = 0, pointList_1 = pointList; _i < pointList_1.length; _i++) {\n                var point = pointList_1[_i];\n                if (!Array.isArray(pointList) || point.length !== _dimension) {\n                    throw new Error('[p5.bezier] One or more points in the array are not input correctly.');\n                }\n            }\n        }\n        _ensureFactorials(n);\n        _beginPath();\n        _moveTo.apply(void 0, pointList[0]);\n        if (_dimension === 2) {\n            var x = void 0, y = void 0, t = void 0;\n            for (t = 0; t <= 1; t += tIncrement) {\n                x = y = 0;\n                for (var i = 0; i <= n; i++) {\n                    var coefficient = _binomialCoefficient(n, i) * Math.pow(1 - t, n - i) * Math.pow(t, i);\n                    x += coefficient * pointList[i][0];\n                    y += coefficient * pointList[i][1];\n                }\n                _lineTo(x, y);\n            }\n        }\n        else if (_dimension === 3) {\n            var t = void 0;\n            for (t = 0; t <= 1; t += tIncrement) {\n                var xyz = [0, 0, 0];\n                for (var i = 0; i <= n; i++) {\n                    var coefficient = _binomialCoefficient(n, i) * Math.pow(1 - t, n - i) * Math.pow(t, i);\n                    for (var d = 0; d < 3; d++) {\n                        xyz[d] += coefficient * pointList[i][d];\n                    }\n                }\n                _lineTo.apply(void 0, xyz);\n            }\n        }\n        _lineTo.apply(void 0, pointList.slice(-1)[0]);\n        if (_useP5) {\n            _closePath(closeType);\n        }\n        else if (closeType === 'CLOSE') {\n            _closePath();\n        }\n        else if (_strict && closeType !== 'OPEN') {\n            throw new Error('[p5.bezier] Close type error. A bezier curve can only be either OPEN or CLOSE.');\n        }\n        _helper_style();\n    }\n}\nexport function newBezierObj(pointList, closeType, accuracy) {\n    if (closeType === void 0) { closeType = 'OPEN'; }\n    if (accuracy === void 0) { accuracy = 7; }\n    var tIncrement = p5bezierAccuracyListAll[accuracy];\n    if (_strict) {\n        if (!Array.isArray(pointList)) {\n            throw new Error(\"[p5.bezier] newBezierObj() function expects an array, got \".concat(typeof pointList, \".\"));\n        }\n        for (var _i = 0, pointList_2 = pointList; _i < pointList_2.length; _i++) {\n            var point = pointList_2[_i];\n            if (!Array.isArray(point) || point.length !== _dimension) {\n                throw new Error('[p5.bezier] One or more points in the array are not input correctly.');\n            }\n        }\n    }\n    return new BezierCurve(pointList, closeType, tIncrement, _dimension);\n}\nvar BezierCurve = /** @class */ (function () {\n    // take pointList, closeType, tIncrement, bezierDimension into constructor\n    function BezierCurve(pL, closeT, tI, bD, vL) {\n        var _a;\n        if (vL === void 0) { vL = null; }\n        if (_strict && bD !== 2 && bD !== 3) {\n            throw new Error(\"[p5.bezier] Dimension error. The bezier curve is \".concat(bD, \"-dimensional and doesn't belong to our world.\"));\n        }\n        this.controlPoints = _deepCopyArray(pL);\n        if (closeT === 'CLOSE') {\n            (_a = this.controlPoints).push.apply(_a, _findCloseCurveExtraPoints(this.controlPoints));\n            this.closeType = 'CLOSE';\n        }\n        else if (closeT === 'OPEN') {\n            this.closeType = 'OPEN';\n        }\n        else {\n            throw new Error('[p5.bezier] Close type error. A bezier curve can only be either OPEN or CLOSE.');\n        }\n        this.dimension = bD;\n        this.increment = tI;\n        this.vertexList = [];\n        this.vertexListLen = 0;\n        this.p = this.controlPoints.length; // has p points for (p - 1) degree curves\n        this.n = this.p - 1; // degree\n        // ensure enough factorials are calculated up to this.n\n        _ensureFactorials(this.n);\n        if (vL === null) {\n            this._buildVertexList();\n        }\n        else {\n            this.vertexList = __spreadArray([], vL, true);\n            this.vertexListLen = this.vertexList.length;\n        }\n    }\n    BezierCurve.prototype._buildVertexList = function () {\n        this.vertexList = [];\n        if (this.dimension === 2) {\n            for (var t = 0; t <= 1; t += this.increment) {\n                var x = 0;\n                var y = 0;\n                for (var i = 0; i <= this.n; i++) {\n                    var binomialCoefficient = _binomialCoefficient(this.n, i);\n                    var term = binomialCoefficient * Math.pow(1 - t, this.n - i) * Math.pow(t, i);\n                    x += term * this.controlPoints[i][0];\n                    y += term * this.controlPoints[i][1];\n                }\n                this.vertexList.push([x, y]);\n            }\n        }\n        else if (this.dimension === 3) {\n            for (var t = 0; t <= 1; t += this.increment) {\n                var xyz = [0, 0, 0];\n                for (var i = 0; i <= this.n; i++) {\n                    var binomialCoefficient = _binomialCoefficient(this.n, i);\n                    var term = binomialCoefficient * Math.pow(1 - t, this.n - i) * Math.pow(t, i);\n                    for (var d = 0; d < 3; d++) {\n                        xyz[d] += term * this.controlPoints[i][d];\n                    }\n                }\n                this.vertexList.push(xyz);\n            }\n        }\n        this._addVertex(this.controlPoints[this.controlPoints.length - 1]);\n        this.dimension = this.vertexList[0].length; // update dimension\n        this.vertexListLen = this.vertexList.length; // update vertexListLen\n        return this.vertexList;\n    };\n    BezierCurve.prototype._addVertex = function (vArray) {\n        // vArray is an array of [x, y] position or [x, y, z] position\n        if (this.dimension === 2 || this.dimension === 3)\n            _lineTo.apply(void 0, vArray);\n        else\n            throw new Error('[p5.bezier] Vertices can only be in 2D or 3D space.');\n    };\n    BezierCurve.prototype._distVertex = function (vArray1, vArray2) {\n        // calculate the distance between\n        // vertex_array_1 and vertex_array_2\n        if (this.dimension === 2) {\n            return _helper_dist(vArray1[0], vArray1[1], vArray2[0], vArray2[1]);\n        }\n        else if (this.dimension === 3) {\n            return _helper_dist(vArray1[0], vArray1[1], vArray1[2], vArray2[0], vArray2[1], vArray2[2]);\n        }\n        return 0;\n    };\n    BezierCurve.prototype.draw = function (dash) {\n        if (!dash) {\n            _beginPath();\n            for (var _i = 0, _a = this.vertexList; _i < _a.length; _i++) {\n                var v = _a[_i];\n                this._addVertex(v);\n            }\n            if (this.closeType === 'CLOSE')\n                _ctx.closePath();\n            if (_useP5)\n                _closePath(this.closeType);\n            else if (this.closeType === 'CLOSE')\n                _closePath();\n            _helper_style();\n        }\n        else if (Array.isArray(dash) &&\n            dash.length === 2 &&\n            this.increment <= 0.008) {\n            // draw a dash curve\n            var solidPart = Math.abs(dash[0]); // length of one solid part\n            var onePart = solidPart + Math.abs(dash[1]), nowLen = 0, modOnePart = 0;\n            var lastVertex = this.vertexList[0];\n            var solid = true; // true draw, false break\n            _ctx.save(); // push\n            _ctx.fillStyle = 'rgba(0, 0, 0, 0)'; // TODO enable fill\n            _beginPath();\n            _moveTo.apply(void 0, this.vertexList[0]);\n            for (var v = 1; v < this.vertexListLen; v++) {\n                nowLen += this._distVertex(lastVertex, this.vertexList[v]);\n                modOnePart = nowLen % onePart;\n                if (modOnePart <= solidPart && solid) {\n                    this._addVertex(this.vertexList[v]);\n                }\n                else if (modOnePart > solidPart && modOnePart <= onePart && solid) {\n                    // endShape();\n                    solid = false;\n                }\n                else if (modOnePart <= solidPart && !solid) {\n                    _moveTo.apply(void 0, this.vertexList[v]);\n                    solid = true;\n                }\n                lastVertex = this.vertexList[v];\n            }\n            _helper_style();\n            _ctx.restore();\n        }\n        else if (this.increment > 0.008)\n            throw new Error('[p5.bezier] Fidelity is too low for a dash line. It should be at least 6.');\n        else\n            throw new Error(\"[p5.bezier] Your dash array input is not valid. Make sure it's an array of two numbers.\");\n    };\n    BezierCurve.prototype.update = function (newControlList) {\n        if (newControlList.length !== this.controlPoints.length) {\n            throw new Error('[p5.bezier] The number of points changed. (Keep the length of the point array the same.)');\n        }\n        else if (this.controlPoints.every(function (v, i) { return v === newControlList[i]; })) {\n            return;\n        }\n        else {\n            this.controlPoints = newControlList;\n            this._buildVertexList();\n        }\n    };\n    BezierCurve.prototype.move = function (x, y, z, toDraw, dash) {\n        if (z === void 0) { z = null; }\n        if (toDraw === void 0) { toDraw = true; }\n        if (dash === void 0) { dash = [0]; }\n        if (z === null && this.dimension === 3) {\n            throw new Error('[p5.bezier] To move a 3D curve, please specify (x, y, z).');\n        }\n        else {\n            var toMove_1 = [x, y];\n            if (z !== null)\n                toMove_1.push(z);\n            var newCurveV = this.vertexList.map(function (v) { return v.slice(); });\n            var newCurveObj = new BezierCurve(this.controlPoints, this.closeType, this.increment, this.dimension, newCurveV);\n            newCurveObj.vertexList = newCurveObj.vertexList.map(function (v) {\n                return v.map(function (val, i) { return val + toMove_1[i]; });\n            });\n            if (toDraw) {\n                newCurveObj.draw(dash);\n            }\n            return newCurveObj;\n        }\n    };\n    BezierCurve.prototype.shortest = function (pX, pY, pZ) {\n        if (pZ === void 0) { pZ = 0; }\n        var minVertex = [];\n        var dMin = Infinity;\n        for (var _i = 0, _a = this.vertexList; _i < _a.length; _i++) {\n            var v = _a[_i];\n            var nowMin = this._distVertex(v, [pX, pY, pZ]);\n            if (dMin > nowMin) {\n                dMin = nowMin;\n                minVertex = v;\n            }\n        }\n        return minVertex;\n    };\n    return BezierCurve;\n}());\n"],"names":["root","factory","exports","module","define","amd","this","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","__spreadArray","to","from","pack","arguments","length","ar","i","l","Array","slice","concat","window","console","log","_canvas","_ctx","_dimension","_strict","_useP5","_beginPath","_moveTo","_lineTo","_closePath","p5bezierAccuracyListAll","_precalculatedFactorials","_determineDimension","context","isP3D","constructor","name","_ensureFactorials","n","_helper_factorial","_binomialCoefficient","_helper_dist","args","_i","Math","hypot","_helper_style","_doFill","fill","_doStroke","stroke","_deepCopyArray","arr","map","v","_findCloseCurveExtraPoints","pointList","first","last","second","secondLast","initBezier","canvas","strictMode","drawingContext","p5","Graphics","Renderer","Error","warn","useP5","beginShape","vertex","endShape","beginPath","bind","moveTo","lineTo","closePath","_setCanvasFunctions","newBezier","closeType","accuracy","isArray","closeCurveExtraPoints","push","apply","tIncrement","pointList_1","point","x","y","t","coefficient","pow","xyz","d","newBezierObj","pointList_2","BezierCurve","pL","closeT","tI","bD","vL","_a","controlPoints","dimension","increment","vertexList","vertexListLen","p","_buildVertexList","term","_addVertex","vArray","_distVertex","vArray1","vArray2","draw","dash","solidPart","abs","onePart","nowLen","modOnePart","lastVertex","solid","save","fillStyle","restore","update","newControlList","every","move","z","toDraw","toMove_1","newCurveV","newCurveObj","val","shortest","pX","pY","pZ","minVertex","dMin","Infinity","nowMin"],"sourceRoot":""}